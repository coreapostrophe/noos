name: build

env:
  RUST_VERSION: 1.85.1
  CARGO_TERM_COLOR: always

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rust-test:
    name: Rust Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          cache-workspaces: "apps/api -> apps/api/target"
      - name: Run tests
        run: |
          cd apps/api
          cargo test

  rust-fmt:
    needs: rust-test
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt
          cache-workspaces: "apps/api -> apps/api/target"
      - name: Enforce formatting
        run: |
          cd apps/api
          cargo fmt --check

  rust-clippy:
    needs: rust-fmt
    name: Rust Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy
          cache-workspaces: "apps/api -> apps/api/target"
      - name: Lint API
        run: |
          cd apps/api
          cargo clippy -- -D warnings

  rust-build:
    needs: rust-clippy
    name: Rust Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy
          cache-workspaces: "apps/api -> apps/api/target"
      - name: Lint API
        run: |
          cd apps/api
          cargo clippy -- -D warnings

  rust-coverage:
    needs: rust-build
    name: Rust Code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: llvm-tools-preview
          cache-workspaces: "apps/api -> apps/api/target"
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: |
          cd apps/api
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Generate report
        run: |
          cd apps/api
          cargo llvm-cov report --html --output-dir coverage
      - uses: actions/upload-artifact@v4
        with:
          name: "Coverage report"
          path: apps/api/coverage/
